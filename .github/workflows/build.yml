name: SonarQube
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Load environment variables from .env
        run: |
          set -o allexport
          source backend/src/.env
          set +o allexport

      - name: Debug environment variables
        run: |
          echo "DB_HOST=$DB_HOST"
          echo "DB_USERNAME=$DB_USERNAME"
          echo "DB_PASSWORD=$DB_PASSWORD"
          echo "JWT_SECRET_KEY=$JWT_SECRET_KEY"
          echo "SUPPORT_EMAIL=$SUPPORT_EMAIL"
          echo "APP_PASSWORD=$APP_PASSWORD"

      - name: Build and analyze
        working-directory: ./backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Using GitHub Secrets for sensitive values
          DB_HOST: ${{ env.DB_HOST }}              # Using environment variables from .env
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          JWT_SECRET_KEY: ${{ env.JWT_SECRET_KEY }}
          SUPPORT_EMAIL: ${{ env.SUPPORT_EMAIL }}
          APP_PASSWORD: ${{ env.APP_PASSWORD }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=lta-unimib_gestione-questionari-salami-enobo-polonia-sereno-i-rosilients
